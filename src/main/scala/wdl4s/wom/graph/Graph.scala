package wdl4s.wom.graph

trait Graph {
  /**
    * The GraphNodes in this Graph.
    */
  def nodes: Set[_ <: GraphNode]
  /**
    * Inputs that must be available before this graph node can be run.
    */
  def inputPorts: Set[GraphNodePort.InputPort]

  /**
    * Outputs that are generated by this GraphNode
    */
  def outputPorts: Set[GraphNodePort.OutputPort]
}

object Graph {
  private final case class CompositeGraph(nodes: Set[_ <: GraphNode]) extends Graph {
    override val inputPorts = ???
    override val outputPorts = ???
  }

  def fromNodes(nodes: Set[_ <: GraphNode]): Graph = {
    // TODO: Scan the nodes for unsatisfied inputs.
    // TODO: Create CompositeGraph sockets for every input
    // TODO: Generate the composite graph by connecting the

    CompositeGraph(nodes)
  }
}
